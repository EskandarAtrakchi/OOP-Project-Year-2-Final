package bookcatalog;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author x23137517
 */
public class BooksGUI extends javax.swing.JFrame {
    
    //ArrayList is needed and named as bList
    
    ArrayList <Book> bList = new ArrayList <> () ;

    /**
     * Creates new form BooksGUI
     */
    public BooksGUI() {
        initComponents();
        load () ; // to load it when the progrmme is launched 
    }
    
    void load () {
        
        //file path 
        File f;
        //file input stream needed assigned to as fis 
        FileInputStream fis ; 
        //object assigned to as ois 
        ObjectInputStream ois ; 
        
        try { // try and catch with IO and class not found exception e
            
            //file name is book.dat
            f = new File("book.dat") ;
            fis = new FileInputStream (f) ;
            ois = new ObjectInputStream (fis) ;
            
            //assigning the ArrayList to what is it in the file 
            //casting to what is in the file to ArrayList 
            bList = ( ArrayList < Book > ) ois.readObject () ;
            
            //notify the user that the App works fine 
            JOptionPane.showMessageDialog(null , "Loaded successfully via a constructor.");
            
        } catch (IOException | ClassNotFoundException e ) {//catch with IO and class not found exception e
            
            //notify the user 
            JOptionPane.showMessageDialog(null , e);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayBTN = new javax.swing.JButton();
        addBTN = new javax.swing.JButton();
        titleTF = new javax.swing.JTextField();
        isbnTF = new javax.swing.JTextField();
        authorTF = new javax.swing.JTextField();
        titleLBL = new javax.swing.JLabel();
        isbnLBL = new javax.swing.JLabel();
        authorLBL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTA = new javax.swing.JTextArea();
        exitBTN = new javax.swing.JButton();
        clearBTN = new javax.swing.JButton();
        typeTOGGLE = new javax.swing.JToggleButton();
        typeLBL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        displayBTN.setText("Display");
        displayBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBTNActionPerformed(evt);
            }
        });

        addBTN.setText("Add");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        titleLBL.setText("Title");

        isbnLBL.setText("ISBN");

        authorLBL.setText("Author");

        displayTA.setEditable(false);
        displayTA.setColumns(20);
        displayTA.setRows(5);
        jScrollPane1.setViewportView(displayTA);

        exitBTN.setText("Exit");
        exitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTNActionPerformed(evt);
            }
        });

        clearBTN.setText("Clear");
        clearBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBTNActionPerformed(evt);
            }
        });

        typeTOGGLE.setText("Type Book");
        typeTOGGLE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeTOGGLEActionPerformed(evt);
            }
        });

        typeLBL.setText("Select Type of Book");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(authorLBL)
                                    .addComponent(titleLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(isbnLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(exitBTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearBTN)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titleTF, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(isbnTF)
                            .addComponent(authorTF)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addBTN)
                                .addGap(18, 18, 18)
                                .addComponent(displayBTN))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(typeLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(typeTOGGLE)
                        .addGap(12, 12, 12)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(isbnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(authorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLBL)
                        .addGap(18, 18, 18)
                        .addComponent(isbnLBL)
                        .addGap(18, 18, 18)
                        .addComponent(authorLBL))
                    .addComponent(jScrollPane1))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayBTN)
                    .addComponent(addBTN)
                    .addComponent(exitBTN)
                    .addComponent(clearBTN))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeTOGGLE)
                    .addComponent(typeLBL))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTNActionPerformed
        
        //notify the user Then exit 
        JOptionPane.showMessageDialog(null , "Bye-Bye");
        System.exit(0);
        
    }//GEN-LAST:event_exitBTNActionPerformed

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        
        // if the fields are empty the user needs to fill them 
        
        if (authorTF.getText().isEmpty() == true || titleTF.getText().isEmpty() == true || isbnTF.getText().isEmpty() == true ) {
            
            JOptionPane.showMessageDialog(null , "Please fill out the Title, Author, and the ISBN fields first!");
            
        } else {
            
            //file path 
            File f ;
            FileOutputStream fos ; // file output stream  
            ObjectOutputStream oos ; //object output stream 

            try { //try and catch with IO exception 
                
                //name of the file is nook.dat 
                f = new File("book.dat"); 
                fos = new FileOutputStream (f) ;
                oos = new ObjectOutputStream (fos) ;

                //getting the texts from the fields 
                String author = authorTF.getText();
                String title = titleTF.getText();
                String isbn = isbnTF.getText () ;

                //assigning them to the constructor 
                
                Book b = new Book (author , title , isbn) ; 

                //adding them to the ArrayList 
                bList.add (b);

                //adding the ArrayList to the file
                oos.writeObject(bList);

                //close the object output stream 
                oos.close();

                //notify the user 
                JOptionPane.showMessageDialog(null , "Saved successfully!");

            } catch (IOException e ) {
                
                //notify the user of the error 
                JOptionPane.showMessageDialog(null , e);
                
            }
        }
    }//GEN-LAST:event_addBTNActionPerformed

    private void clearBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBTNActionPerformed
        
        //setting everything to null
        
        displayTA.setText(null);
        authorTF.setText(null);
        titleTF.setText(null);
        isbnTF.setText(null);
        
    }//GEN-LAST:event_clearBTNActionPerformed

    private void displayBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBTNActionPerformed
        
        Book b; //instance of class Book (b)
        
        for (int i = 0; i < bList.size(); i �) { //for loop to go through the size of the ArrayList 
            
            b = bList.get(i) ; // getting the index 
            
            displayTA.setText(b.getDetails()); // append it to the text area
            
        }
        
    }//GEN-LAST:event_displayBTNActionPerformed

    private void typeTOGGLEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeTOGGLEActionPerformed
        
        Ebooks eb = new Ebooks () ;// instance from Ebook class 
        
        if (typeTOGGLE.isSelected() == true ) { // if it is selected then access the variable in Ebook class and set it to  Book 
           
            JOptionPane.showMessageDialog(null , "Book type been selected.");
            
            typeTOGGLE.setText("Book");
            
            //setting the setter method to Book type 
            
            eb.setType("Book");
            
            bList.add(eb);
            
        } else  { // if it is not selected then access the variable in Ebook class and set it to  eBook 
            
            JOptionPane.showMessageDialog(null , "eBook type been selected.") ;
            
            eb.setType("eBook");//setting the setter method to eBook type 
            
            typeTOGGLE.setText("eBook");
            
            bList.add(eb);
            
        }
    }//GEN-LAST:event_typeTOGGLEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BooksGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BooksGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BooksGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BooksGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BooksGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTN;
    private javax.swing.JLabel authorLBL;
    private javax.swing.JTextField authorTF;
    private javax.swing.JButton clearBTN;
    private javax.swing.JButton displayBTN;
    private javax.swing.JTextArea displayTA;
    private javax.swing.JButton exitBTN;
    private javax.swing.JLabel isbnLBL;
    private javax.swing.JTextField isbnTF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel titleLBL;
    private javax.swing.JTextField titleTF;
    private javax.swing.JLabel typeLBL;
    private javax.swing.JToggleButton typeTOGGLE;
    // End of variables declaration//GEN-END:variables
}
